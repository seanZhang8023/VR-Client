import path from 'path'
import webpack from 'webpack'

import config from './tasks/config'

export default {
  context: path.join(__dirname, 'client'),
  devtool: 'eval',
  historyApiFallback: true,
  entry: {
    app: [
      'webpack-hot-middleware/client',
      './' + config.src.main
    ]
  },
  output: {
    path: path.join(__dirname, config.dest),
    filename: 'bundle.js',
    publicPath: '/static/'
  },
  node: {
    fs: 'empty',
    net: 'empty',
    tls: 'empty'
  },
  plugins: [
    new webpack.HotModuleReplacementPlugin(),
    new webpack.NoErrorsPlugin(),
    new webpack.DefinePlugin({
      'process.env': {
        NODE_ENV: JSON.stringify(process.env.NODE_ENV),
        VA_BASE_URL: JSON.stringify(process.env.VA_BASE_URL)
      }
    })
  ],
  resolve: {
    alias: {
      'redux': path.join(__dirname, 'node_modules/redux')
    },
    extensions: ['', '.js', '.json', '.node'],
    fallback: path.join(__dirname, 'node_modules')
  },
  resolveLoader: { fallback: path.join(__dirname, 'node_modules') },
  module: {
    loaders: [{
      test: /\.js$/,
      loaders: ['react-hot-loader', 'babel-loader'],
      include: [path.resolve('/home/raphael/Live-Support/tmp/kandy-redux')],
      exclude: /node_modules\/(?!(kandy-redux)\/).*/
    }, {
      test: /\.(scss|css)$/,
      loaders: ['style', 'css', 'sass'],
      include: __dirname
    }, {
      test: /\.svg/,
      loader: 'svg-url-loader'
    }, {
      test: /\.html$/,
      exclude: /node_modules/,
      loader: 'file?name=[path][name].[ext]'
    }, {
      test: /\.json$/,
      loader: 'json'
    }, {
      test: /\.node$/,
      loader: 'node'
    }],
    noParse: /node_modules\/json-schema\/lib\/validate\.js/
  }
}
